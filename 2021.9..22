//int main()
//{
//	int age = 10;
//	if (age < 18);
//	printf ("未成年\n", age);
//
//
//
//	return 0;
//}
//int main()
//{
//	int age = 10;
//	if (age < 18)
//		printf("未成年\n");
//	else {
//
//		if (age >= 18 && age < 28)
//			printf("青年\n");
//		else if (age >= 28)
//			printf("壮年以上\n");
//	}
//	return 0;
//}
int main()
{
	int i = 0;
	while (i < 100)
	{
	if (i % 2 != 0)
		printf("奇数%d\n", i);
	i++;
	}
	
	
	return 0;
}
#define _CRT_SECURE_NO_WARNINGS 
#include<stdio.h>
//int main()
//{
//	int age = 10;
//	if (age < 18);
//	printf ("未成年\n", age);
//
//
//
//	return 0;
//}
//int main()
//{
//	int age = 10;
//	if (age < 18)
//		printf("未成年\n");
//	else {
//
//		if (age >= 18 && age < 28)
//			printf("青年\n");
//		else if (age >= 28)
//			printf("壮年以上\n");
//	}
//	return 0;
//}
//int main()
//{
//	int i = 0;
//	while (i < 100)
//	{
//	if (i % 2 != 0)
//		printf("奇数%d\n", i);
//	i++;
//	}
//	
//	
//	return 0;
//}
//int main()
//{
//	int day = 0;
//	scanf("%d", &day);
//		switch (day)
//		{
//			
//		case 1:
//			printf("周一\n");
//			break;
//		case 2:
//			printf("周二\n");
//			break;
//		case 3:
//			printf("周三\n");
//			break;
//
//		}
//
//	return 0;
//}
//int main()
//{
//	int day = 0;
//	scanf("%d", &day);
//	switch(day)
//	{
//	case 1:
//	case 2:
//	case 3:
//	case 4:
//	case 5:
//		printf("工作日\n");
//		break; 
//	case 6:
//	case 7:
//		printf("休息日\n");
//		break;
//	
//	
//	}
//
//
//	return 0;
//}
//int main()//另外一种表达分组方式
// 
//{
//	int arr[] = { 1,2,3,4,5 };
//	scanf("%d", &arr);
//	printf("工作日\n");
//	int arr1[] = { 6,7 };
//	scanf("%d", &arr1);
//	printf("休息日\n");
//
//
//	return 0;
//
//int main()
//
//{
//	int i, j = 0;
//	printf("请输入两个数：");
//	scanf("%d  %d", &i, &j);
//	if (i > j)
//	{
//		printf("i");
//	}
//	else {
//
//		printf("j");
//	}
//
//
//	return 0;
//}
//////int main()
//////{
////char i[7];
////scanf("%s", &i[0]);
////
////if(i[0] >= 1 && i[0] < 6)
////{
////
////	printf("工作日%d\n");
////}
////else
////{
////	printf("休息日%d");
////}
////return 0;
////}
int main()
{
	int ch = 0;
	 while((ch = getchar())!=EOF);
	 {
		 putchar(ch);
	 }
	// printf("%c\n", ch);
	return 0;
}
